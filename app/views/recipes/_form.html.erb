<%= form_for @recipe, html: { multipart: true } do |f| %>

  <div class="form-group">
    <%= f.label :title, 'Название рецепта' %>
    <%= f.text_field :title, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.label :category_id, 'Категория' %>
    <%= f.collection_select(:category_id, Category.all, :id, :title) %>
  </div>


  <div class="form-group">
    <%= f.label :description, 'Описание' %>
    <%= f.trix_editor :description, required: true, autofocus: true %>
  </div>

  <div class="form-group ui-widget">
    <%= f.label :all_products, 'Перечислите через запятую продукты' %>
    <%= f.text_field :all_products, class: 'form-control', id: 'ingredients' %>
  </div>

  <div class="form-group">
    <%= f.label :photo, 'Обложка' %>
    <%= f.file_field :photo, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= f.submit 'Сохранить', class: 'btn btn-primary'%>
  </div>
<% end %>

<script>
	  $( function() {
    function split( val ) {
      return val.split( /,\s*/ );
    }
    function extractLast( term ) {
      return split( term ).pop();
    }
 
    $( "#ingredients" )
      // don't navigate away from the field on tab when selecting an item
      .on( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).autocomplete( "instance" ).menu.active ) {
          event.preventDefault();
        }
      })
      .autocomplete({
        source: function( request, response ) {
          $.getJSON( "/ingredients/json_list", {
            term: extractLast( request.term )
          }, response );
        },
        search: function() {
          // custom minLength
          var term = extractLast( this.value );
          if ( term.length < 2 ) {
            return false;
          }
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
					terms.push( ui.item.value );
					console.log(ui.item);
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
	} );
	

  </script>