<div class="row">
  <div class="col-sm-7" 
    style="
          background-image: url(https://images.unsplash.com/photo-1484412509196-57eda96981e8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80);
          margin-left: 15px;">
    <div class="alert alert-success" role="alert">
      Вы можете перетаскивать продукты из правой части экрана, которые 
      есть у вас в наличии в зону "Кухонного стола". Если из перечня ингредиентов возможно
      сделать блюдо, которое есть на сайте, то это блюдо отобразится в нижней левой
      части интерфейса "Возможные блюда". 
      <br>
      Чтобы вернуть ингредиенты на место - необходимо обновить страницу.
    </div>
    <div id="have_ingredients" class="dropzone">
      <legend>Кухонный стол</legend>
    </div>
    <br>
    <div class="panel panel-primary">
      <legend class="list-group-item">Возможные блюда...</legend>
      <div id='recipes' class='row' style="margin: 10px;">
        Извини, возможно, ты останешься голодным. Может, у тебя есть ещё что-то из продуктов?
      </div>
    </div>
  </div>
  <div class="col-sm-4">
    <form>
      <div class="form-group ui-widget">
        <input class='form-control' id='ingredients' type='text' placeholder="Поверьте наличие вашего продукта в списке"/>
      </div>
    </form>
    <%= render @ingredients%>
  </div>
</div>


<script>
	  $( function() {
    function split( val ) {
      return val.split( /,\s*/ );
    }
    function extractLast( term ) {
      return split( term ).pop();
    }
 
    $( "#ingredients" )
      // don't navigate away from the field on tab when selecting an item
      .on( "keydown", function( event ) {
        if ( event.keyCode === $.ui.keyCode.TAB &&
            $( this ).autocomplete( "instance" ).menu.active ) {
          event.preventDefault();
        }
      })
      .autocomplete({
        source: function( request, response ) {
          $.getJSON( "/ingredients/json_list", {
            term: extractLast( request.term )
          }, response );
        },
        search: function() {
          // custom minLength
          var term = extractLast( this.value );
          if ( term.length < 2 ) {
            return false;
          }
        },
        focus: function() {
          // prevent value inserted on focus
          return false;
        },
        select: function( event, ui ) {
          var terms = split( this.value );
          // remove the current input
          terms.pop();
          // add the selected item
					terms.push( ui.item.value );
					console.log(ui.item);
          // add placeholder to get the comma-and-space at the end
          terms.push( "" );
          this.value = terms.join( ", " );
          return false;
        }
      });
	} );
	

  </script>